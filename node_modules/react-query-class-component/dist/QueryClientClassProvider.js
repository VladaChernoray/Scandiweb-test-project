"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.QueryClientClassContext = void 0;
/**
 * External dependencies
 */
const react_1 = __importDefault(require("react"));
const util_1 = require("./util");
// context instance
exports.QueryClientClassContext = react_1.default.createContext({});
const QueryClientClassProvider = ({ children, queries = {}, }) => {
    let mapQueries = {};
    // detect invalid queries value
    if (!(0, util_1.isSet)(queries || 'object' === typeof queries)) {
        throw new Error(`queries must be passed and type of object`);
    }
    // map react-queries
    Object.keys(queries).forEach((queryKey) => {
        const query = queries === null || queries === void 0 ? void 0 : queries[queryKey];
        // detect invalid hook
        if (!(0, util_1.isSet)(query === null || query === void 0 ? void 0 : query.hook)) {
            throw new Error(`react-query hook is not passed for query with id: '${queryKey}'`);
        }
        // detect invalid params
        if (!(0, util_1.isSet)(query === null || query === void 0 ? void 0 : query.params)) {
            throw new Error(`params for hook are not passed for query with id: '${queryKey}'`);
        }
        // execute react-query dynamically
        mapQueries = Object.assign(Object.assign({}, mapQueries), { [queryKey]: query === null || query === void 0 ? void 0 : query.hook(...((query === null || query === void 0 ? void 0 : query.params) || [])) });
    });
    return (react_1.default.createElement(exports.QueryClientClassContext.Provider, { value: mapQueries }, children));
};
exports.default = QueryClientClassProvider;
//# sourceMappingURL=QueryClientClassProvider.js.map